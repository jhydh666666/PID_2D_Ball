#include <Servo.h>
#include <Ultrasonic.h>
// #define Servo_PWM 6   // MG 995  

Servo MG996R_servo;  
Servo MG995_servo;
int distance;

Ultrasonic ultrasonic(3, 2);
float target_pos = 15.5;  
float error;
float previous_error;
float kp = 5;  
float ki = 0.05;
float kd = 500;
int dt = 50;  
float P, I, D, PID;
unsigned long time;
int vibration_level = 0;  

void setup() {
  Serial.begin(9600);
  MG996R_servo.attach(10);    // pin 10 for PID control motor
  MG995_servo.attach(6);     // pin 6 for vibration making motor
  time = millis();
}

void loop() 
{
  if (millis() > time + dt) 
  {
    time = millis();

    distance = ultrasonic.read();
    Serial.print("Distance = ");
    Serial.println(distance);

    // 设置震动级别
    switch(vibration_level) {
      case 0:
        MG995_servo.detach();  // stop rotating 
        break;
      case 1:
        MG995_servo.attach(6);
        MG995_servo.write(0);   // CW fast rotate 
        delay(500);
        MG995_servo.write(90); // stop
        delay(500);
        MG995_servo.detach();
        break;
      case 2:
        MG995_servo.attach(6);
        MG995_servo.write(0);  
        delay(300);
        MG995_servo.write(90); 
        delay(300);
        MG995_servo.detach();
        break;
      case 3:
        MG995_servo.attach(6);
        MG995_servo.write(0);  
        delay(100);
        MG995_servo.write(90); 
        delay(100);
        MG995_servo.detach();
        break;
    }


    error = distance - target_pos; 

    P = kp * error;  
    if (-4 < error && error < 4) 
    {
      I += ki * error;  // 积分项
    } else 
    {
      I = 0;  // 防止积分项累积过多
    }
    D = kd * ((error - previous_error) / dt);  // 微分项
    PID = P + I + D;    

    if (PID > 200) 
    {
      PID = 200;  // 限制PID上限
    } 
    if (PID < -200) 
    {
      PID = -200;  // 限制PID下限
    }

    previous_error = error;  

    // Serial.print("Error: "); 
    Serial.print(error);
    // Serial.print(" cm  ");
    // Serial.print("   P: ");
    // Serial.print(P);
    // Serial.print("   I: ");
    // Serial.print(I);
    // Serial.print("   D: ");
    // Serial.print(D);
    // Serial.print("   PID: ");
    // Serial.println(PID);

    int angle = map(PID, -200, 200, 0, 170);  
    MG996R_servo.write(angle);


    if(abs(error) > 2 && abs(error) < 5)
    {
      Serial.println("It's shaking slightly now !!");
      // vibration_level = 1;  
    }
    else if(abs(error) > 5 && abs(error) < 8) 
    {
      Serial.println("There is currently moderate shaking !!");
      // vibration_level = 2;  
    }
    else if (abs(error) > 8)
    {
      Serial.println("Currently shaking violently !!");
      // vibration_level = 3;  
    }
    else
    {
      Serial.println("Currrntly no shaking, calm down please ")
    }
  }
}

